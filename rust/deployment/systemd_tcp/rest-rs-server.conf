upstream myapp1 {

	# Maintenant on maintient la connexion entre le proxy et les serveurs proxied, il faut alors configurer
	# http1 et le header Connection (voir ci-dessous). Keepalive doit être le plus petit possible, c le nombre de connexion maintenues par un worker.
	keepalive 32;

	# TCP or Unix socket, les socket unix sont plus rapides, donc à préférer en locale
	server 127.0.0.1:5000;
}


server {
	# quand une requête est redirigée, les serveurs proxied recoivent  une requete http.
	# Nginx modifie les headers Connection et Host. Ici on s'assure que c'est headers ne sont meme pas passés aux
	# serveurs proxied
	proxy_set_header Connection "";
	proxy_set_header Host "";

	# ici on maintient la connexion entre le client et le serveur proxy
	keepalive_disable none;
	# nombre maximum de requete pour une seule connexion de type keep-alive
	keepalive_requests 10000;
	# temps maximum pour une session keep alive, il vaut mieux éviter de garder trop de connexion ouverte
	keepalive_timeout 3m;

	# Pour maintenir la connexion entre le proxy et un serveur proxied, on utilise keepalive
	# nginx requiert alors que la versio http soit 1.1 et Connection header = "" (deja fait au dessus)
	proxy_http_version 1.1;

	listen          8000 ;
	server_name     127.0.0.1;
	location / {
		# on configure le cache (voir la note en fin pour le cache)
		# on active la zone de cache. Cela ne signifie pas qu'elle sera utilisée !
		proxy_cache test;
		# On ajoute le statut du cache du serveur proxy
		add_header X-Cache-Status $upstream_cache_status;
		# temps de validité du cache. A préciser si Cache-Control n'est pas donné par le serveur proxied (cf note)
		proxy_cache_valid 10s;

		# add_header ajoute un header à la réponse du proxy vers le client (firefox)
		# Cela n'autorise pas le proxy à mettre en cache dans sa zone ! Il faut donner proxy_cache_valid ou que le serveur proxied configure
		# Cache-Control (cf code).
		# attention à bien séparer par une ','. Aucun warning ne sera donné en cas d'erreur.
		# Ici, seul firefox pourra mettre en cache (ou encore un aute proxy intermédiaire...)
		# add_header Cache-Control "public, max-age=1000";

		proxy_pass http://myapp1;
		}
}